{"ast":null,"code":"import axios from \"axios\";\nconst path = \"http://localhost:8080/\";\n//tested\nexport async function getLabels(setLabels) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.get(path + 'labels', {\n      withCredentials: true\n    });\n    setLabels(response.data.labels);\n    // Log the response data and status code\n    console.log('Response Data:', response.data.labls);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\nexport async function getImages(data, setImages, page = 1) {\n  // try {\n  //   const images = data.Images;\n  //   setImages(prev => [...prev, ...images]);\n  // } catch (err) {\n  //     if (err.response){\n  //       console.log(err.response.data.message)\n  //     }else{\n  //       console.log(err.message)\n  //     }\n  // }\n  try {\n    // Make the POST request using axios\n    console.log(page);\n    if (page === 1) {\n      const response = await axios.post(path + 'images', data, {\n        withCredentials: true\n      });\n      setImages(response.data.images);\n      console.log(response.data.images);\n    } else {\n      const response = await axios.post(path + 'images', data, {\n        params: {\n          page: page\n        },\n        withCredentials: true\n      });\n      console.log(response.data.images);\n      setImages(prev => [...prev, ...response.data.images]);\n    }\n\n    // Log the response data and status code\n    //  console.log(response.data.images)\n\n    //   console.log('Response Data:', response.data);\n    //   console.log('Status Code:', response.status);\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\nexport async function assignLabels(data, setButtonClicked) {\n  try {\n    // Make the POST request using axios\n    const response = await axios.post(path + 'add-labels', data, {\n      withCredentials: true\n    });\n    // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n    //setButtonClicked(prev => !prev)\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\nexport async function removeLabels(data) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'remove-labels', data, {\n      withCredentials: true\n    });\n\n    // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\n\n//tested\nexport async function createLabels(data) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'labels', data, {\n      withCredentials: true\n    });\n\n    // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\n\n//tested\nexport async function deleteLabels(data) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'delete-labels', data, {\n      withCredentials: true\n    });\n\n    // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n    if (err.response) {\n      console.log(err.response.data.message);\n    } else {\n      console.log(err.message);\n    }\n  }\n}\nexport async function uploadFiles(data, setUploadButtonText) {\n  try {\n    const response = await axios.post(path + 'upload', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      withCredentials: true\n    });\n    console.log('Upload successful', response.data);\n    setUploadButtonText(\"Images Uploaded\");\n  } catch (error) {\n    console.error('Error uploading files', error);\n    setUploadButtonText(\"Failed to Upload Images\");\n  }\n}","map":{"version":3,"names":["axios","path","getLabels","setLabels","response","get","withCredentials","data","labels","console","log","labls","status","err","message","getImages","setImages","page","post","images","params","prev","assignLabels","setButtonClicked","removeLabels","createLabels","deleteLabels","uploadFiles","setUploadButtonText","headers","error"],"sources":["/home/arsalan/mnt/projects/img-dash/frontend/src/services/user.service.js"],"sourcesContent":["\nimport axios from \"axios\";\nconst path = \"http://localhost:8080/\"\n//tested\nexport async function getLabels(setLabels) {\n try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.get(path + 'labels', {withCredentials: true,});\n    setLabels(response.data.labels)\n   // Log the response data and status code\n    console.log('Response Data:', response.data.labls);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\nexport async function getImages(data, setImages, page = 1) {\n  // try {\n  //   const images = data.Images;\n  //   setImages(prev => [...prev, ...images]);\n  // } catch (err) {\n  //     if (err.response){\n  //       console.log(err.response.data.message)\n  //     }else{\n  //       console.log(err.message)\n  //     }\n  // }\n  try {\n    // Make the POST request using axios\n    console.log(page)\n    if(page === 1){\n      const response = await axios.post(path + 'images', data, {withCredentials: true,});\n      setImages(response.data.images)\n      console.log(response.data.images)\n      \n    }else{\n      const response = await axios.post(path + 'images', data, {\n          params: {\n            page: page,\n         },\n        withCredentials: true,\n      });\n      console.log(response.data.images)\n      setImages(prev => [...prev, ...response.data.images])\n    }\n    \n   // Log the response data and status code\n  //  console.log(response.data.images)\n  \n  //   console.log('Response Data:', response.data);\n  //   console.log('Status Code:', response.status);\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\nexport async function assignLabels(data, setButtonClicked) {\n  try {\n    // Make the POST request using axios\n    const response = await axios.post(path + 'add-labels', data, {withCredentials: true,});\n   // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n    //setButtonClicked(prev => !prev)\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\nexport async function removeLabels(data) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'remove-labels', data, {withCredentials: true,});\n\n   // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\n//tested\nexport async function createLabels(data) {\n    try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'labels', data, {withCredentials: true,});\n\n   // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\n//tested\nexport async function deleteLabels(data) {\n  try {\n    //console.log(\"login >>>\", data);\n\n    // Make the POST request using axios\n    const response = await axios.post(path + 'delete-labels', data, {withCredentials: true,});\n\n   // Log the response data and status code\n    console.log('Response Data:', response.data);\n    console.log('Status Code:', response.status);\n  } catch (err) {\n      if (err.response){\n        console.log(err.response.data.message)\n      }else{\n        console.log(err.message)\n      }\n  }\n}\n\nexport async function uploadFiles(data, setUploadButtonText) {\n \n    try {\n      const response = await axios.post(path + 'upload', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        withCredentials :  true,\n      });\n\n      console.log('Upload successful', response.data);\n\t\t  setUploadButtonText(\"Images Uploaded\");\n    } catch (error) {\n      console.error('Error uploading files', error);\n\t\tsetUploadButtonText(\"Failed to Upload Images\");\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}