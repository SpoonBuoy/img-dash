{"ast":null,"code":"var _jsxFileName = \"/home/arsalan/mnt/projects/img-dash/frontend/src/components/user/ViewImages.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Image from \"./Image\";\nimport { getLabels, getImages } from \"../../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewImages() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [filteredImages, setFilteredImages] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedLabels, setSelectedLabels] = useState([]);\n  const [filterButton, setFilterButton] = useState(false);\n  const [showLabels, setShowLabels] = useState(false);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    const data = {\n      filters: []\n    };\n    getImages(data, setImages, page + 1).then(data => {\n      console.log(\"from get images\", data);\n    });\n    getLabels(setLabels);\n    console.log(\"Button clicked\");\n  }, [buttonClicked, page, getImages, getLabels]);\n  console.log(\"after use effect\", images[1]);\n  const handleOptionToggle = e => {\n    if (selectedLabels.includes(e.target.value)) {\n      const currentLabels = selectedLabels.filter(label => label !== e.target.value);\n      setSelectedLabels(currentLabels);\n      if (currentLabels.length > 0) setFilterButton(true);else {\n        setFilteredImages([]);\n        setFilterButton(false);\n      }\n    } else {\n      const currentLabels = [...selectedLabels, e.target.value];\n      setSelectedLabels(currentLabels);\n      if (currentLabels.length > 0) setFilterButton(true);else {\n        setFilteredImages([]);\n        setFilterButton(false);\n      }\n    }\n  };\n  const filterImages = () => {\n    const filteredImages = images.filter(img => img.labels.some(item => selectedLabels.includes(item)));\n    setFilteredImages(filteredImages);\n    setShowLabels(false);\n  };\n  const toggleLabels = () => {\n    setShowLabels(prev => !prev);\n  };\n  const handleScroll = e => {\n    const {\n      offsetHeight,\n      scrollTop,\n      scrollHeight\n    } = e.target;\n    if (offsetHeight + scrollTop >= scrollHeight) {\n      const data = {\n        filters: []\n      };\n      getImages(data, setImages, page + 1);\n      setPage(prev => prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLabels,\n          className: \"border-2 border-slate-400 bg-gray-200 rounded-lg px-1\",\n          children: \"select labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${showLabels ? \"\" : \"hidden\"} overflow-y-auto h-48 px-5 py-1 absolute z-50 top-7 bg-white rounded-lg shadow-lg border-2`,\n          children: labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: index,\n              type: \"checkbox\",\n              value: label,\n              checked: selectedLabels.includes(label),\n              onChange: handleOptionToggle,\n              className: \"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: index,\n              className: \"ms-2 text-sm font-medium whitespace-nowrap\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: filterImages,\n        disabled: !filterButton,\n        className: `${filterButton ? \"bg-blue-400\" : \"bg-gray-400\"} text-white p-1 rounded-md`,\n        children: \"Filter Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 h-new scroll-smooth overflow-y-scroll\",\n      onScroll: handleScroll,\n      children: filterButton ? filteredImages.map((img, index) => /*#__PURE__*/_jsxDEV(Image, {\n        setButtonClicked: setButtonClicked,\n        image: img,\n        labels: labels,\n        setLabels: setLabels\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)) : images.map((img, index) => /*#__PURE__*/_jsxDEV(Image, {\n        setButtonClicked: setButtonClicked,\n        id: img.path,\n        image: img,\n        labels: labels,\n        setLabels: setLabels\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewImages, \"mQQegM8lzyhuEYgRe9mRiYagQSE=\");\n_c = ViewImages;\nvar _c;\n$RefreshReg$(_c, \"ViewImages\");","map":{"version":3,"names":["useEffect","useState","Image","getLabels","getImages","jsxDEV","_jsxDEV","ViewImages","_s","images","setImages","page","setPage","filteredImages","setFilteredImages","labels","setLabels","selectedLabels","setSelectedLabels","filterButton","setFilterButton","showLabels","setShowLabels","buttonClicked","setButtonClicked","data","filters","then","console","log","handleOptionToggle","e","includes","target","value","currentLabels","filter","label","length","filterImages","img","some","item","toggleLabels","prev","handleScroll","offsetHeight","scrollTop","scrollHeight","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","type","checked","onChange","htmlFor","disabled","onScroll","image","path","_c","$RefreshReg$"],"sources":["/home/arsalan/mnt/projects/img-dash/frontend/src/components/user/ViewImages.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Image from \"./Image\";\nimport { getLabels, getImages } from \"../../services/user.service\";\n\nexport default function ViewImages() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [filteredImages, setFilteredImages] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [selectedLabels, setSelectedLabels] = useState([]);\n  const [filterButton, setFilterButton] = useState(false);\n  const [showLabels, setShowLabels] = useState(false);\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  useEffect(() => {\n    const data = {\n      filters : []\n    }\n    getImages(data, setImages, page + 1).then((data) => {console.log(\"from get images\", data)})\n    getLabels(setLabels);\n    console.log(\"Button clicked\")\n  }, [buttonClicked, page, getImages, getLabels]);\n\n  console.log(\"after use effect\", images[1]);\n  \n\n\n  const handleOptionToggle = (e) => {\n    if (selectedLabels.includes(e.target.value)) {\n      const currentLabels = selectedLabels.filter(\n        (label) => label !== e.target.value\n      );\n      setSelectedLabels(currentLabels);\n\n      if (currentLabels.length > 0) setFilterButton(true);\n      else {\n        setFilteredImages([]);\n        setFilterButton(false);\n      }\n    } else {\n      const currentLabels = [...selectedLabels, e.target.value];\n      setSelectedLabels(currentLabels);\n\n      if (currentLabels.length > 0) setFilterButton(true);\n      else {\n        setFilteredImages([]);\n        setFilterButton(false);\n      }\n    }\n  };\n\n  const filterImages = () => {\n    const filteredImages = images.filter((img) =>\n      img.labels.some((item) => selectedLabels.includes(item))\n    );\n\n    setFilteredImages(filteredImages);\n    setShowLabels(false);\n  };\n\n  const toggleLabels = () => {\n    setShowLabels((prev) => !prev);\n  };\n\n  const handleScroll = (e) => {\n    const { offsetHeight, scrollTop, scrollHeight } = e.target;\n    if (offsetHeight + scrollTop >= scrollHeight) {\n      const data = {\n      filters : []\n    }\n      getImages(data, setImages, page+1);\n      setPage(prev => prev+1);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-20\">\n      <div className=\"flex flex-row items-center space-x-3\">\n        <div className=\"flex flex-col items-center relative\">\n          <button\n            onClick={toggleLabels}\n            className=\"border-2 border-slate-400 bg-gray-200 rounded-lg px-1\"\n          >\n            select labels\n          </button>\n          <div\n            className={`${\n              showLabels ? \"\" : \"hidden\"\n            } overflow-y-auto h-48 px-5 py-1 absolute z-50 top-7 bg-white rounded-lg shadow-lg border-2`}\n          >\n            {labels.map((label, index) => (\n              <div key={index} className=\"flex items-center mb-4\">\n                <input\n                  id={index}\n                  type=\"checkbox\"\n                  value={label}\n                  checked={selectedLabels.includes(label)}\n                  onChange={handleOptionToggle}\n                  className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-2\"\n                />\n                <label\n                  htmlFor={index}\n                  className=\"ms-2 text-sm font-medium whitespace-nowrap\"\n                >\n                  {label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n        <button\n          onClick={filterImages}\n          disabled={!filterButton}\n          className={`${\n            filterButton ? \"bg-blue-400\" : \"bg-gray-400\"\n          } text-white p-1 rounded-md`}\n        >\n          Filter Images\n        </button>\n      </div>\n\n      <div\n        className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 h-new scroll-smooth overflow-y-scroll\"\n        onScroll={handleScroll}\n      >\n        {filterButton\n          ? filteredImages.map((img, index) => (\n              <Image setButtonClicked = {setButtonClicked} key={index} image={img} labels={labels} setLabels = {setLabels} />\n            ))\n          : images.map((img, index) => (\n              <Image setButtonClicked = {setButtonClicked} key={index} id={img.path} image={img} labels={labels} setLabels = {setLabels} />\n            ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,EAAEC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMyB,IAAI,GAAG;MACXC,OAAO,EAAG;IACZ,CAAC;IACDtB,SAAS,CAACqB,IAAI,EAAEf,SAAS,EAAEC,IAAI,GAAG,CAAC,CAAC,CAACgB,IAAI,CAAEF,IAAI,IAAK;MAACG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,IAAI,CAAC;IAAA,CAAC,CAAC;IAC3FtB,SAAS,CAACa,SAAS,CAAC;IACpBY,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B,CAAC,EAAE,CAACN,aAAa,EAAEZ,IAAI,EAAEP,SAAS,EAAED,SAAS,CAAC,CAAC;EAE/CyB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEpB,MAAM,CAAC,CAAC,CAAC,CAAC;EAI1C,MAAMqB,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAId,cAAc,CAACe,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAE;MAC3C,MAAMC,aAAa,GAAGlB,cAAc,CAACmB,MAAM,CACxCC,KAAK,IAAKA,KAAK,KAAKN,CAAC,CAACE,MAAM,CAACC,KAChC,CAAC;MACDhB,iBAAiB,CAACiB,aAAa,CAAC;MAEhC,IAAIA,aAAa,CAACG,MAAM,GAAG,CAAC,EAAElB,eAAe,CAAC,IAAI,CAAC,CAAC,KAC/C;QACHN,iBAAiB,CAAC,EAAE,CAAC;QACrBM,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC,MAAM;MACL,MAAMe,aAAa,GAAG,CAAC,GAAGlB,cAAc,EAAEc,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MACzDhB,iBAAiB,CAACiB,aAAa,CAAC;MAEhC,IAAIA,aAAa,CAACG,MAAM,GAAG,CAAC,EAAElB,eAAe,CAAC,IAAI,CAAC,CAAC,KAC/C;QACHN,iBAAiB,CAAC,EAAE,CAAC;QACrBM,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC;EAED,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAM1B,cAAc,GAAGJ,MAAM,CAAC2B,MAAM,CAAEI,GAAG,IACvCA,GAAG,CAACzB,MAAM,CAAC0B,IAAI,CAAEC,IAAI,IAAKzB,cAAc,CAACe,QAAQ,CAACU,IAAI,CAAC,CACzD,CAAC;IAED5B,iBAAiB,CAACD,cAAc,CAAC;IACjCS,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzBrB,aAAa,CAAEsB,IAAI,IAAK,CAACA,IAAI,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAId,CAAC,IAAK;IAC1B,MAAM;MAAEe,YAAY;MAAEC,SAAS;MAAEC;IAAa,CAAC,GAAGjB,CAAC,CAACE,MAAM;IAC1D,IAAIa,YAAY,GAAGC,SAAS,IAAIC,YAAY,EAAE;MAC5C,MAAMvB,IAAI,GAAG;QACbC,OAAO,EAAG;MACZ,CAAC;MACCtB,SAAS,CAACqB,IAAI,EAAEf,SAAS,EAAEC,IAAI,GAAC,CAAC,CAAC;MAClCC,OAAO,CAACgC,IAAI,IAAIA,IAAI,GAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEtC,OAAA;IAAK2C,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpD5C,OAAA;MAAK2C,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBACnD5C,OAAA;QAAK2C,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAClD5C,OAAA;UACE6C,OAAO,EAAER,YAAa;UACtBM,SAAS,EAAC,uDAAuD;UAAAC,QAAA,EAClE;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjD,OAAA;UACE2C,SAAS,EAAG,GACV5B,UAAU,GAAG,EAAE,GAAG,QACnB,4FAA4F;UAAA6B,QAAA,EAE5FnC,MAAM,CAACyC,GAAG,CAAC,CAACnB,KAAK,EAAEoB,KAAK,kBACvBnD,OAAA;YAAiB2C,SAAS,EAAC,wBAAwB;YAAAC,QAAA,gBACjD5C,OAAA;cACEoD,EAAE,EAAED,KAAM;cACVE,IAAI,EAAC,UAAU;cACfzB,KAAK,EAAEG,KAAM;cACbuB,OAAO,EAAE3C,cAAc,CAACe,QAAQ,CAACK,KAAK,CAAE;cACxCwB,QAAQ,EAAE/B,kBAAmB;cAC7BmB,SAAS,EAAC;YAAwE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnF,CAAC,eACFjD,OAAA;cACEwD,OAAO,EAAEL,KAAM;cACfR,SAAS,EAAC,4CAA4C;cAAAC,QAAA,EAErDb;YAAK;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA,GAdAE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAeV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNjD,OAAA;QACE6C,OAAO,EAAEZ,YAAa;QACtBwB,QAAQ,EAAE,CAAC5C,YAAa;QACxB8B,SAAS,EAAG,GACV9B,YAAY,GAAG,aAAa,GAAG,aAChC,4BAA4B;QAAA+B,QAAA,EAC9B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENjD,OAAA;MACE2C,SAAS,EAAC,4FAA4F;MACtGe,QAAQ,EAAEnB,YAAa;MAAAK,QAAA,EAEtB/B,YAAY,GACTN,cAAc,CAAC2C,GAAG,CAAC,CAAChB,GAAG,EAAEiB,KAAK,kBAC5BnD,OAAA,CAACJ,KAAK;QAACsB,gBAAgB,EAAIA,gBAAiB;QAAayC,KAAK,EAAEzB,GAAI;QAACzB,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAIA;MAAU,GAA1DyC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuD,CAC/G,CAAC,GACF9C,MAAM,CAAC+C,GAAG,CAAC,CAAChB,GAAG,EAAEiB,KAAK,kBACpBnD,OAAA,CAACJ,KAAK;QAACsB,gBAAgB,EAAIA,gBAAiB;QAAakC,EAAE,EAAElB,GAAG,CAAC0B,IAAK;QAACD,KAAK,EAAEzB,GAAI;QAACzB,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAIA;MAAU,GAAxEyC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqE,CAC7H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAnIuBD,UAAU;AAAA4D,EAAA,GAAV5D,UAAU;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}